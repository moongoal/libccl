name: Build and Test (Release)

on:
  push:
    branches: [ "master", "feat/**", "chore/**" ]
  pull_request:
    branches: [ "master" ]

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Release
  CTEST_OUTPUT_ON_FAILURE: ON
  CLANG_VERSION: 16

jobs:
  build:
    # The CMake configure and build commands are platform agnostic and should work equally well on Windows or Mac.
    # You can convert this to a matrix build if you need cross-platform coverage.
    # See: https://docs.github.com/en/free-pro-team@latest/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix

    strategy:
      fail-fast: true
      matrix:
        os: [ubuntu-latest]

    runs-on: ${{matrix.os}}

    steps:
    - name: Setup C/C++ Compiler
      run: wget https://apt.llvm.org/llvm.sh && chmod u+x llvm.sh && sudo ./llvm.sh ${{env.CLANG_VERSION}}

    - uses: actions/checkout@v4
      with:
        submodules: true

    - name: Install System Packages
      run: sudo apt-get update && sudo apt-get -y install python3 python3-pip

    - name: Install Python Packages
      run: pip3 install pipenv && pipenv install -d

    - name: Configure Conan Build Profile
      run: |
        cat > ./conan-build-profile <<EOF
        [settings]
        arch=x86_64
        os=Linux
        compiler=clang
        compiler.version=${{env.CLANG_VERSION}}
        compiler.libcxx=libstdc++11
        build_type=${{env.BUILD_TYPE}}
        EOF

    - name: Configure Conan Host Profile
      run: pipenv run conan profile detect && pipenv run conan profile show

    - name: Build and Test
      working-directory: ${{github.workspace}}
      run: pipenv run conan create -pr:b ./conan-build-profile --build missing .
      env:
        CC: clang-${{env.CLANG_VERSION}}
        CXX: clang++-${{env.CLANG_VERSION}}
